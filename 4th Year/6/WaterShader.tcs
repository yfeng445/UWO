#version 400

layout (vertices = 4) out;

// Input vertex data, aggregated into patches
in vec3 vPosition[];
in vec3 vNormal[];


// Output data : will be passed to TES.
out vec3 normal_tcs[];
out vec3 position_tcs[];
out vec3 eye_tcs[];
out vec3 light_tcs[];
out vec2 uv_tcs[];


// Uniform values that stay constant for the whole mesh.
uniform mat4 model;
uniform mat4 view;
uniform mat4 projection;


uniform float outerTess;
uniform float innerTess;

void main() {
    //use gl_InvocationID


    gl_TessLevelOuter[0] = outerTess;
    gl_TessLevelOuter[1] = outerTess;
    gl_TessLevelOuter[2] = outerTess;
    gl_TessLevelOuter[3] = outerTess;
    gl_TessLevelInner[0] = innerTess;
    gl_TessLevelInner[1] = innerTess;

}